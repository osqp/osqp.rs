searchState.loadedDescShard("osqp", 0, "The OSQP (Operator Splitting Quadratic Program) solver is …\nA matrix in Compressed Sparse Column format.\nA proof of dual infeasibility.\nA problem that failed to be solved.\nThe linear system solver for OSQP to use.\nThe status of the polish operation.\nA proof of primal infeasibility.\nAn instance of the OSQP solver.\nThe settings used when initialising a solver.\nAn error that can occur when setting up the solver.\nA solution to a problem.\nThe result of solving a problem.\nEnables choosing rho adaptively.\nSet the interval for adapting rho as a fraction of the …\nSets the number of iterations between rho adaptations.\nSets the tolerance for adapting rho.\nSets the linear solver relaxation parameter.\nSets the number of ADMM iterations between termination …\nThe CSC data array.\nSets the polishing regularization parameter.\nReturns the certificate of dual infeasibility.\nReturns the certificate of primal infeasibility.\nReturns the norm of dual residual.\nSets the absolute convergence tolerance.\nSets the dual infeasibility tolerance.\nSets the primal infeasibility tolerance.\nSets the relative convergence tolerance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a sparse CSC matrix with its elements filled with …\nCreates a dense CSC matrix with its elements filled with …\nCreates a sprase CSC matrix with its elements filled with …\nCreates a dense CSC matrix with its elements filled with …\nThe CSC index array.\nThe CSC column pointer array.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtracts the upper triangular elements of the matrix.\nReturns <code>true</code> if the matrix is structurally upper …\nReturns the number of iterations taken by the solver.\nSets the linear system solver to use.\nSets the maximum number of ADMM iterations.\nThe number of columns in the matrix.\nInitialises the solver and validates the problem.\nThe number of rows in the matrix.\nReturns the primal objective value.\nSets the number of iterative refinement steps to use when …\nReturns the status of the polish operation.\nReturns the time taken for the polish phase.\nEnables polishing the ADMM solution.\nReturns the norm of primal residual.\nSets the ADMM step rho.\nReturns the current best estimate of rho.\nReturns the number of rho updates.\nReturns the total time taken by the solver.\nEnables scaled termination criteria.\nSets the number of heuristic data scaling iterations.\nReturns the time taken for the setup phase.\nSets the ADMM step sigma.\nReturns the solution if the problem is <code>Solved</code>.\nAttempts to solve the quadratic program.\nReturns the time taken for the solve phase.\nSets the solve time limit.\nUpdates the elements of matrix <code>A</code> without changing its …\nUpdates the elements of matrix <code>P</code> without changing its …\nSets the lower and upper bounds of the constraints to <code>l</code> …\nSets the linear part of the cost function to <code>q</code>.\nSets the lower bound of the constraints to <code>l</code>.\nSets the ADMM step rho.\nSets the upper bound of the constraints to <code>u</code>.\nEnables writing progress to stdout.\nWarm starts the primal variables at <code>x</code> and the dual …\nWarm starts the primal variables at <code>x</code>.\nWarms start the dual variables at <code>y</code>.\nEnables warm starting the primal and dual variables from …\nReturns the primal variables at the solution if the …\nReturns the primal variables at the solution.\nReturns the dual variables at the solution.")